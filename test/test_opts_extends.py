from erud._utils import useGPU
if useGPU :
    import cupy as cp
import numpy as np
import pytest as test

np.set_printoptions(precision=99, suppress=True)



from erud.opts_extend.max_index import max_index

def test_max_index() :
    m = np.array([[1,2], [3,4]])
    assert np.all(max_index(1).fprop(m) == np.array([1, 1]))

from erud.opts_extend.choise_to_index import choise_to_index

def test_choise_to_index () :
	np.random.seed(2)
	x = np.array([0.1, 0.1, 0.7, 0.1])
	opt = choise_to_index()
	z = opt.fprop(x)

	assert np.all(z == np.array([0., 0., 1., 0.]))

from erud.opts_extend.yolo1_loss import yolo1_loss

def test_ios() :
    opt = yolo1_loss()
    # x1 = 198.4
	# y1 = 339.2
	# w1 = 134.4
	# h1 = 156.8
	# x2 = 204.8
	# y2 = 345.6
	# w2 = 125.44
	# h2 = 179.2
	# l1 = 198.4 - 134.4 / 2 = 131.2
	# t1 = 339.2 - 156.8 / 2 = 260.8
	# r1 = 198.4 + 134.4 / 2 = 265.6
	# b1 = 339.2 + 156.8 / 2 = 417.6
	# l2 = 204.8 - 125.44 / 2 = 142.08
	# t2 = 345.6 - 179.2 / 2 = 256.0
	# r2 = 204.8 + 125.44 / 2 = 267.52
	# b2 = 345.6 + 179.2 / 2 = 435.2
	# w = 265.6 - 142.08 = 123.52
	# h = 417.6 - 260.8 = 156.8
	# si = 19367.936
	# w1 = 265.6 - 131.2 = 134.4
	# h1 = 417.6 - 260.8 = 156.8
	# w2 = 267.52 - 142.08 = 125.44
	# h2 = 435.2 - 256.0 = 179.2
	# o = (134.4 * 156.8) + (125.44 * 179.2) - 19367.936 = 24184.832
	# iou = 19367.936 / 24184.832 = 0.8008298755186724
    iou1 = opt.iou(3, 5, 
            0.1, 0.3, 0.3, 0.35, 
            0.2, 0.4, 0.28, 0.4)
    assert iou1 == 0.8008298755186714
    
    iou2 = opt.iou(3, 5, 0.1, 0.1, 0.01, 0.02, 0.9, 0.9, 0.02, 0.01)
    assert iou2 == 0

def test_yolo1_loss() :
    opt = yolo1_loss()


    yhat = np.array([[[[
         0.71,
         0.4, 0.6, 0.24, 0.12,
         0.51,
         0.45, 0.58, 0.22, 0.16,
         0.001, 0.005, 0.003, 0.055, 0.851,
         0.012, 0.009, 0.001, 0.002, 0.003,
         0.003, 0.012, 0.006, 0.050, 0.011,
         0.001, 0.001, 0.043, 0.104, 0.215], [
         0.71,
         0.4, 0.6, 0.24, 0.12,
         0.51,
         0.45, 0.58, 0.22, 0.16,
         0.001, 0.005, 0.003, 0.055, 0.851,
         0.012, 0.009, 0.001, 0.002, 0.003,
         0.003, 0.012, 0.006, 0.050, 0.011,
         0.001, 0.001, 0.043, 0.104, 0.215]]]])
    y = np.array([[[[
        1,
        0.42, 0.55, 0.2, 0.1,
        1,
        0.42, 0.55, 0.2, 0.1,
        0, 0, 0, 0, 1,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0
    ], [
        0,
        0, 0, 0, 0,
        0,
        0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0
    ]]]])

    loss = opt.fprop(yhat, y)

    assert np.all(np.array([[[[0.08410000000000002   , 0.0012196936161606362 ,          0.00543735346197134   , 0.009109769979335542  ,          0.004554884989667771  , 0.                    ,          0.                    , 0.                    ,          0.                    , 0.                    ,          0.000001              , 0.000025              ,          0.000009              , 0.003025              ,          0.022201000000000005  , 0.000144              ,          0.00008099999999999999, 0.000001              ,          0.000004              , 0.000009              ,          0.000009              , 0.000144              ,          0.000036              , 0.0025000000000000005 ,          0.00012099999999999999, 0.000001              ,          0.000001              , 0.0018489999999999997 ,          0.010816              , 0.046224999999999995  ],         [0.25205               , 0.                    ,          0.                    , 0.                    ,          0.                    , 0.13005               ,          0.                    , 0.                    ,          0.                    , 0.                    ,          0.                    , 0.                    ,          0.                    , 0.                    ,          0.                    , 0.                    ,          0.                    , 0.                    ,          0.                    , 0.                    ,          0.                    , 0.                    ,          0.                    , 0.                    ,          0.                    , 0.                    ,          0.                    , 0.                    ,          0.                    , 0.                    ]]]]) == loss)
    dz = np.ones_like(y)

    [dyhat, dy] = opt.bprop(dz)
    assert np.all(dyhat == np.array([[[[-0.29000000000000004, -0.12347538297979863,           0.21286446121830943,  0.43564535412361555,           0.4356453541236155 , -0.                 ,           0.                 ,  0.                 ,           0.                 ,  0.                 ,           0.001              ,  0.005              ,           0.003              ,  0.055              ,          -0.14900000000000002,  0.012              ,           0.009              ,  0.001              ,           0.002              ,  0.003              ,           0.003              ,  0.012              ,           0.006              ,  0.05               ,           0.011              ,  0.001              ,           0.001              ,  0.043              ,           0.104              ,  0.215              ],         [ 0.355              ,  0.                 ,           0.                 ,  0.                 ,           0.                 ,  0.255              ,           0.                 ,  0.                 ,           0.                 ,  0.                 ,           0.                 ,  0.                 ,           0.                 ,  0.                 ,           0.                 ,  0.                 ,           0.                 ,  0.                 ,           0.                 ,  0.                 ,           0.                 ,  0.                 ,           0.                 ,  0.                 ,           0.                 ,  0.                 ,           0.                 ,  0.                 ,           0.                 ,  0.                 ]]]])
)
    assert np.all(dy == np.array([[[[ 0.29000000000000004,  0.12049963525733356,          -0.22232967867093512, -0.47722557505166097,          -0.47722557505166086,  0.                 ,          -0.                 , -0.                 ,          -0.                 , -0.                 ,          -0.001              , -0.005              ,          -0.003              , -0.055              ,           0.14900000000000002, -0.012              ,          -0.009              , -0.001              ,          -0.002              , -0.003              ,          -0.003              , -0.012              ,          -0.006              , -0.05               ,          -0.011              , -0.001              ,          -0.001              , -0.043              ,          -0.104              , -0.215              ],         [-0.355              , -0.                 ,          -0.                 , -0.                 ,          -0.                 , -0.255              ,          -0.                 , -0.                 ,          -0.                 , -0.                 ,          -0.                 , -0.                 ,          -0.                 , -0.                 ,          -0.                 , -0.                 ,          -0.                 , -0.                 ,          -0.                 , -0.                 ,          -0.                 , -0.                 ,          -0.                 , -0.                 ,          -0.                 , -0.                 ,          -0.                 , -0.                 ,          -0.                 , -0.                 ]]]])
)


    