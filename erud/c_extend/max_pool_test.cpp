#include "max_pool.cpp"
#include <iostream>
#include <vector>
#include <tuple>


int main() {
    // 2 * 4 * 6 * 3矩阵的flatten版本
    // 144
    float x[144] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144};

    int cx[144] = {0};
   
    // 2 * 2 * 3 * 3
    float z[36];
    
    // (2, 4, 6, 3) -> (2, 2) -> (2, 2, 3, 3)
    int v = max_pool_fprop(x, z, cx, 2, 4, 6, 2, 3, 2, 2, 3, 2);

    std::cout << "Z = ( ";
    for (int i = 0; i < 36; i++) {
        std::cout << z[i] << " ";
    }
    std::cout << ")" << std::endl;

    std::cout << "MaxValue = (";
    for (int i = 0; i < 144; i++) {
        if (cx[i] == 1) {
            std::cout << x[i] << " ";
        }
    }
    std::cout << ")" << std::endl;
    // 2 * 4 * 6 * 3
    // 144
    float dx[144] = {0};

    // 60
    float dz[36] = {0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1 ,
       0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2 , 0.21,
       0.22, 0.23, 0.24, 0.25, 0.26, 0.27, 0.28, 0.29, 0.3 , 0.31, 0.32,
       0.33, 0.34, 0.35, 0.36};

    max_pool_bprop(cx, dz, dx, 2, 4, 6, 2, 3, 2, 2, 3, 2);

    std::cout << "dX = ( ";
    for (int i = 0; i < 144; i++) {
        std::cout << dx[i] << " ";
    }
    std::cout << ")" << std::endl;

    // std::cout << "dW = ( ";
    // for (int i = 0; i < 24; i++) {
    //     std::cout << dw[i] << " ";
    // }
    // std::cout << ")" << std::endl;

    return 0;
}